"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .benefitads import BenefitAds, BenefitAdsTypedDict
from .benefitadsupdate import BenefitAdsUpdate, BenefitAdsUpdateTypedDict
from .benefitarticles import BenefitArticles, BenefitArticlesTypedDict
from .benefitarticlesupdate import BenefitArticlesUpdate, BenefitArticlesUpdateTypedDict
from .benefitcustom import BenefitCustom, BenefitCustomTypedDict
from .benefitcustomupdate import BenefitCustomUpdate, BenefitCustomUpdateTypedDict
from .benefitdiscord_output import BenefitDiscordOutput, BenefitDiscordOutputTypedDict
from .benefitdiscordupdate import BenefitDiscordUpdate, BenefitDiscordUpdateTypedDict
from .benefitdownloadables import BenefitDownloadables, BenefitDownloadablesTypedDict
from .benefitdownloadablesupdate import BenefitDownloadablesUpdate, BenefitDownloadablesUpdateTypedDict
from .benefitgithubrepository import BenefitGitHubRepository, BenefitGitHubRepositoryTypedDict
from .benefitgithubrepositoryupdate import BenefitGitHubRepositoryUpdate, BenefitGitHubRepositoryUpdateTypedDict
from polar_sh.types import BaseModel
from polar_sh.utils import FieldMetadata, PathParamMetadata, RequestMetadata, SecurityMetadata
from typing import Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


class BenefitsUpdateSecurityTypedDict(TypedDict):
    open_id_connect: NotRequired[str]
    http_bearer: NotRequired[str]
    

class BenefitsUpdateSecurity(BaseModel):
    open_id_connect: Annotated[Optional[str], FieldMetadata(security=SecurityMetadata(scheme=True, scheme_type="openIdConnect", field_name="Authorization"))] = None
    http_bearer: Annotated[Optional[str], FieldMetadata(security=SecurityMetadata(scheme=True, scheme_type="http", sub_type="bearer", field_name="Authorization"))] = None
    

BenefitsUpdateBenefitUpdateTypedDict = Union[BenefitArticlesUpdateTypedDict, BenefitAdsUpdateTypedDict, BenefitCustomUpdateTypedDict, BenefitDiscordUpdateTypedDict, BenefitGitHubRepositoryUpdateTypedDict, BenefitDownloadablesUpdateTypedDict]


BenefitsUpdateBenefitUpdate = Union[BenefitArticlesUpdate, BenefitAdsUpdate, BenefitCustomUpdate, BenefitDiscordUpdate, BenefitGitHubRepositoryUpdate, BenefitDownloadablesUpdate]


class BenefitsUpdateRequestTypedDict(TypedDict):
    id: str
    request_body: BenefitsUpdateBenefitUpdateTypedDict
    

class BenefitsUpdateRequest(BaseModel):
    id: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    request_body: Annotated[BenefitsUpdateBenefitUpdate, FieldMetadata(request=RequestMetadata(media_type="application/json"))]
    

BenefitsUpdateResponseBenefitsUpdateTypedDict = Union[BenefitArticlesTypedDict, BenefitAdsTypedDict, BenefitDiscordOutputTypedDict, BenefitGitHubRepositoryTypedDict, BenefitDownloadablesTypedDict, BenefitCustomTypedDict]
r"""Benefit updated."""


BenefitsUpdateResponseBenefitsUpdate = Union[BenefitArticles, BenefitAds, BenefitDiscordOutput, BenefitGitHubRepository, BenefitDownloadables, BenefitCustom]
r"""Benefit updated."""

