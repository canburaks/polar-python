"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .downloadablefilecreate import DownloadableFileCreate, DownloadableFileCreateTypedDict
from .organizationavatarfilecreate import OrganizationAvatarFileCreate, OrganizationAvatarFileCreateTypedDict
from .productmediafilecreate import ProductMediaFileCreate, ProductMediaFileCreateTypedDict
from polar_sh.types import BaseModel
from polar_sh.utils import FieldMetadata, SecurityMetadata, get_discriminator
from pydantic import Discriminator, Tag
from typing import Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


class FilesCreateSecurityTypedDict(TypedDict):
    open_id_connect: NotRequired[str]
    http_bearer: NotRequired[str]
    

class FilesCreateSecurity(BaseModel):
    open_id_connect: Annotated[Optional[str], FieldMetadata(security=SecurityMetadata(scheme=True, scheme_type="openIdConnect", field_name="Authorization"))] = None
    http_bearer: Annotated[Optional[str], FieldMetadata(security=SecurityMetadata(scheme=True, scheme_type="http", sub_type="bearer", field_name="Authorization"))] = None
    

FilesCreateFileCreateTypedDict = Union[DownloadableFileCreateTypedDict, ProductMediaFileCreateTypedDict, OrganizationAvatarFileCreateTypedDict]


FilesCreateFileCreate = Annotated[Union[Annotated[DownloadableFileCreate, Tag("downloadable")], Annotated[ProductMediaFileCreate, Tag("product_media")], Annotated[OrganizationAvatarFileCreate, Tag("organization_avatar")]], Discriminator(lambda m: get_discriminator(m, "service", "service"))]

