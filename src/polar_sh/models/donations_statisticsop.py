"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import date
from enum import Enum
from polar_sh.types import BaseModel
from polar_sh.utils import FieldMetadata, QueryParamMetadata, SecurityMetadata
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class DonationsStatisticsSecurityTypedDict(TypedDict):
    open_id_connect: NotRequired[str]
    http_bearer: NotRequired[str]
    

class DonationsStatisticsSecurity(BaseModel):
    open_id_connect: Annotated[Optional[str], FieldMetadata(security=SecurityMetadata(scheme=True, scheme_type="openIdConnect", field_name="Authorization"))] = None
    http_bearer: Annotated[Optional[str], FieldMetadata(security=SecurityMetadata(scheme=True, scheme_type="http", sub_type="bearer", field_name="Authorization"))] = None
    

class Donationsinterval(str, Enum):
    MONTH = "month"
    WEEK = "week"
    DAY = "day"

class DonationsStatisticsRequestTypedDict(TypedDict):
    to_organization_id: str
    start_date: date
    end_date: date
    donations_interval: Donationsinterval
    

class DonationsStatisticsRequest(BaseModel):
    to_organization_id: Annotated[str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    start_date: Annotated[date, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    end_date: Annotated[date, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    donations_interval: Annotated[Donationsinterval, pydantic.Field(alias="donationsInterval"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    
